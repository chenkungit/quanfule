<?php

namespace app\common\Entity;


use app\common\model\BaseModel;
use app\common\Utils\Request;

class Users extends BaseModel
{
    protected $table = 'ecs_users';

    public static function getInfoByUserId(int $userId, string $fields = '')
    {
        return parent::getInfo('user_id', $userId, $fields); // TODO: Change the autogenerated stub
    }


    public static function getCollectionByUserId(array $userId, string $fields = '*')
    {
        return static::field($fields)->whereIn('user_id',$userId)->order('is_vip desc')->select()->toArray();
    }

    public static function updateByUserId(array $set, int $user_id)
    {
        static::update($set, ['user_id' => $user_id]);
    }

    public static function getPageList(array $pageData = [])
    {
        $page = Request::getPage();
        $pageSize = Request::getLimit();

        $where = [];

        if (!empty($pageData['user_name'])) {
            $where[] = ['user_name', 'like', "%" . $pageData['user_name'] . "%"];
        }
        if (!empty($pageData['is_vip'])) {
            $where[] = ['is_vip', '=', $pageData['is_vip']];
        }

        $ar = static::field('user_id,user_name,nick,is_vip,mobile,user_money,frozen_money,prize_money,frozen_prize_money,FROM_UNIXTIME(reg_time) as reg_time')
            ->where($where);

        $result['count'] = $ar->count('user_id');
        $result['pagecount'] = ceil(($result['count'] / $pageSize));
        $result['list'] = $ar->page($page, $pageSize)->select()->toArray();

        return $result;
    }
}